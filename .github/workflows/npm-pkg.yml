name: Publish package to GitHub Packages
run-name: "${{github.repository}} #${{github.run_id}} - Building ${{github.ref_name}} by @${{github.actor}}"

on:
  workflow_call:  
    inputs:
      node-version:
        description: node version
        default: "20.x"
        type: string
        required: false

jobs:
  build:
    #runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - uses: tiacsys/clean-after-action@v3
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          #registry-url: 'https://npm.pkg.github.com/${{github.repository_owner}}'
          #token: ${{ github.token }}
      - run: npm i
      - run: npm test
      - run: npm pkg set name=@${{github.repository}}
      - name: Add suffix prerelease
        if: ${{ contains(github.ref, 'develop') }}
        run: npm version prerelease --preid=dev --allow-same-version
      - run: npm run build
      - run: npm pack
      #- run: mv dist drop/dist/
      #- run: mv package.json drop
      - name: Upload artifact for publish
        uses: actions/upload-artifact@v4
        with:
          name: drop
          path: ${{ github.workspace }}/*.tgz
  
  publish:
    needs: build
    #runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Download artifact from build
        uses: actions/download-artifact@v4
        with:
          name: drop
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: 'https://npm.pkg.github.com'
          token: "${{ secrets.PATPKG }}"
          scope: "@${{github.repository_owner}}"
      #- run: echo "@${{github.repository_owner}}:registry=https://npm.pkg.github.com" >> .npmrc
      #- run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.PATPKG }}" >> .npmrc
        continue-on-error: false
      - run: npm publish marceorg-my-first-npm-package-1.0.10.tgz
        #env:
        #  NODE_AUTH_TOKEN: ${{ secrets.PATPKG }}
      #- run: |
      #    for file in ${{ github.workspace }}/*.tgz; do
      #      echo "$file"
      #      npm publish "$file"
      #    done

        #env:
        #  NPM_AUTH_TOKEN: "${{ secrets.PATPKG }}"
      #- run: npm publish 
      #  env:
      #    NODE_AUTH_TOKEN: ${{ github.token }}