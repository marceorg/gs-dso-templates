name: dotnet build

on:
  workflow_call:  
    inputs:
      dotnet-version:
        description: Dotnet version
        default: "8"
        type: string
        required: false
      app-name:
        description: App name
        type: string
        required: true

jobs:
  build:
    #runs-on: self-hosted
    runs-on: ubuntu-latest

    steps:
     - uses: tiacsys/clean-after-action@v3
     - name: Dump GitHub context
       env:
         GITHUB_CONTEXT: ${{ toJson(github) }}
       run: echo "$GITHUB_CONTEXT"
       
     - uses: actions/checkout@v4
     
     - name: Debug 
       run: |
            echo "FEED = ${{ vars.FEED_GS_REPOSITORY }}"
            echo "PAT = ${{ secrets.PAT_GS_REPOSITORY }}"
            
     - name: Setup dotnet ${{ inputs.dotnet-version }}
       uses: actions/setup-dotnet@v4
       with:
         dotnet-version: ${{ inputs.dotnet-version }}
         source-url: ${{ vars.FEED_GS_REPOSITORY }}
       env:
         NUGET_AUTH_TOKEN: ${{secrets.PAT_GS_REPOSITORY}}
         
     - name: Display dotnet version
       run: dotnet --version
       
     - name: Publish
       run: dotnet publish -c release --property:PublishDir=publish
       
     - name: Upload artifact for deployment job
       uses: actions/upload-artifact@v4
       with:
         name: drop
         path: publish
          
  DEV:
    if: ${{ contains(github.ref, 'develop') }}
    runs-on: self-hosted
    needs: build
    environment: dev

    steps:
     # - name: Dump job context
       # env:
         # JOB_CONTEXT: ${{ toJson(job) }}
       # run: echo "$JOB_CONTEXT"
        
     - name: Download artifact from build job
       uses: actions/download-artifact@v4
       with:
         name: drop
         path: drop
         
     - uses: actions/checkout@v4
       with:
         repository: ${{ github.repository_owner }}/gs-dso-templates
         ref: master
         path: './gs-dso-templates'
     
     - uses: azure/docker-login@v2
       with:
         login-server: ${{ vars.ACR_LAB_SERVER }}
         username: ${{ vars.ACR_LAB_USER }}
         password: ${{ secrets.ACR_LAB_PASSWORD }}
         
     - name: Get dockerfile
       uses: Lyoko-Jeremie/js-copy-github-action@master
       with:
         srcBase: "gs-dso-templates/dockerfiles/dotnet.${{ inputs.dotnet-version }}/"
         source: "gs-dso-templates/dockerfiles/dotnet.${{ inputs.dotnet-version }}/Dockerfile"
         destBase: ./
         target: ./
         
     - uses: cschleiden/replace-tokens@v1
       with:
         files: 'Dockerfile'
       env:
         APP_NAME: ${{ inputs.app-name }}
                  
     - run: |
         docker build . -t ${{ vars.ACR_LAB_SERVER }}/testrepo-dev:${{ github.sha }}
         docker push ${{ vars.ACR_LAB_SERVER }}/testrepo-dev:${{ github.sha }}
         
     - uses: ejhayes/action-argocd-deploy@releases/v1
        with:
          accessToken: ${{ secrets.ACR_LAB_PASSWORD }}
          baseUrl: http://localhost:8888/
          name: testrepo
          namespace: marcelo
          project: default
          tokens: |
            REPLICAS: 2
            IMAGE: ${{ vars.ACR_LAB_SERVER }}/testrepo-dev
            TAG: ${{ github.sha }}
          valuesFile: gs-dso-templates/charts/helm-testrepo/values.yaml
          info: |
            environment: dev

         
  TEST:
    if: ${{ contains(github.ref, 'release') }}
    runs-on: self-hosted
    needs: build
    environment: tst

    steps:
     - name: Download artifact from build job
       uses: actions/download-artifact@v4
       with:
         name: drop
         path: drop
         
     - uses: actions/checkout@v4
       with:
         repository: ${{ github.repository_owner }}/gs-dso-templates
         ref: master
         path: './gs-dso-templates'

     
     